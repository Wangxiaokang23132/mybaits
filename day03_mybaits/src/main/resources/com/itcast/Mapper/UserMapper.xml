<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
        namespace中
Mapper模式中Mapper必须是全限定类名
传统Dao 中可以随意赋值-->
<mapper namespace="com.itcast.Mapper.UserMapper">
    <!--配置结果集 手动设置实体类对象的属性跟查询结果段一一对应-->
    <!--
    id: 唯一标识
    type:结果输出集类型
    -->
    <resultMap id="UserMap" type="user">
        <!--
        id标签:配置主键
        result标签:普通列的配置(非主键列)
         property:指定实体类对象的属性
        column:指定查询列的名称
        -->
        <id property="id" column="id"/>
        <result property="username" column="name"/>
        <result property="user_grander" column="grander"/>
        <result property="user_email" column="email"/>
    </resultMap>
    <!--查询所有-->

    <select id="findAll" resultMap="UserMap">
        <!--将指定的数实体类对象的属性as
        -->
        <!-- select id,name as username,grander as user_grander,age,address,qq,email as user_email from user-->
        SELECT * from USER
    </select>
    <!--查询id-->
    <select id="findById" parameterType="int" resultMap="UserMap">
        SELECT * from user WHERE  id=#{id}
    </select>
    <!--根据名字查询-->
    <select id="findByName" parameterType="String" resultMap="UserMap">
        SELECT  * from user where name=#{name}
    </select>
    <!--保存数据-->
    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
           <!-- select last_insert_id();-->
            SELECT LAST_INSERT_ID();
        </selectKey>
        INSERT into USER VALUES(id,#{username},#{user_grander},#{age},#{address},#{qq},#{user_email})
    </insert>
    <!--模糊查询-->
    <select id="findLike" parameterType="String" resultType="user">
        <!--select * from  user where name like  #{username}-->
        SELECT * from USER where name like '%${value}%'
    </select>
    <!--修改-->
    <update id="updateUser" parameterType="User" >
        update user set  name=#{username},grander=#{user_grander},age=#{age},address=#{address},qq=#{qq},email=#{user_email}
    </update>
</mapper>